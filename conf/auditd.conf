# Autor: Robson Vaamonde
# Site: www.procedimentosemti.com.br
# Facebook: facebook.com/ProcedimentosEmTI
# Facebook: facebook.com/BoraParaPratica
# YouTube: youtube.com/BoraParaPratica
# Linkedin: https://www.linkedin.com/in/robson-vaamonde-0b029028/
# Instagram: https://www.instagram.com/procedimentoem/?hl=pt-br
# Data de criação: 02/10/2025
# Data de atualização: 02/10/2025
# Versão: 0.01
# Testado e homologado para a versão do Ubuntu Server 22.04.x LTS x64x
# Testado e homologado para a versão do Audit v3.0.x
#
# Configuração básica do Serviço de Auditoria do Auditd no Ubuntu Server
#
# Habilita eventos locais (logs do próprio servidor)
local_events = yes
#
# Grava os logs em disco (pode ser 'no' se quiser enviar só pela rede)
write_logs = yes
#
# Caminho do arquivo de log principal
log_file = /var/log/audit/audit.log
#
# Grupo com permissão de leitura nos logs (adm = padrão no Ubuntu)
log_group = adm
#
# Formato dos logs:
# RAW = cru, ENRICHED = com informações adicionais (usuário, syscall, contexto SELinux/AppArmor)
log_format = ENRICHED
#
# Como os dados são gravados no disco:
# INCREMENTAL, INCREMENTAL_ASYNC, SYNC
flush = INCREMENTAL_ASYNC
#
# Frequência (em eventos) para flush do buffer quando INCREMENTAL_ASYNC
freq = 50
#
# Tamanho máximo do log em MB antes de rotação
max_log_file = 8
#
# O que fazer quando atingir o limite do log (IGNORE, SYSLOG, SUSPEND, ROTATE, KEEP_LOGS)
max_log_file_action = ROTATE
#
# Número de arquivos de log antigos a manter (log_file.1, log_file.2, etc.)
num_logs = 5
#
# Ajuste de prioridade (nice value) para o auditd no scheduler (+valor = mais prioridade)
priority_boost = 4
#
# Espaço livre mínimo no filesystem (em MB) antes de acionar ação
space_left = 75
#
# Ação quando chegar em 'space_left'
# IGNORE, SYSLOG, EMAIL, SUSPEND, SINGLE, HALT
space_left_action = SYSLOG
#
# Nome de identificação no cabeçalho dos logs
# NONE = desabilitado, HOSTNAME, FQDN, USER, CUSTOM
name_format = HOSTNAME
name = pti.intra
#
# Verifica se o e-mail pode ser enviado quando espaço está baixo
verify_email = yes
#
# Conta que receberá alertas (precisa configurar MTA)
action_mail_acct = root
#
# Espaço crítico em disco (em MB) antes de acionar ação mais severa
admin_space_left = 50
admin_space_left_action = SUSPEND
#
# O que fazer se o disco ficar 100% cheio
disk_full_action = SUSPEND
#
# O que fazer se ocorrer erro de disco (corrupção, falha de I/O)
disk_error_action = SUSPEND
#
# Integração com TCP Wrappers (hosts.allow/deny) para conexões de rede do auditd
use_libwrap = yes
#
# Porta TCP para escuta (comentada por padrão)
##tcp_listen_port = 60
#
# Fila de conexões TCP pendentes
tcp_listen_queue = 5
#
# Máximo de conexões TCP simultâneas por IP
tcp_max_per_addr = 1
#
# Faixa de portas TCP cliente (se usar modo remoto)
##tcp_client_ports = 1024-65535
#
# Tempo máximo (segundos) que cliente pode ficar inativo
tcp_client_max_idle = 0
#
# Transporte de logs (UDP, TCP, RELP, etc.)
transport = TCP
#
# Suporte a Kerberos para autenticar conexões seguras de auditoria
krb5_principal = auditd
##krb5_key_file = /etc/audit/audit.key
#
# Distribuir eventos para vários destinos de rede
distribute_network = no
#
# Profundidade da fila de eventos (quanto maior, mais memória usada, mas evita perdas)
q_depth = 1200
#
# O que fazer se a fila de eventos estourar (IGNORE, SYSLOG, SUSPEND, SINGLE, HALT)
overflow_action = SYSLOG
#
# Número máximo de tentativas de restart do auditd antes de parar
max_restarts = 10
#
# Diretório de plugins do auditd (ex: audispd, syslog forwarding, etc.)
plugin_dir = /etc/audit/plugins.d
#
# Timeout (segundos) para marcar fim de evento incompleto
end_of_event_timeout = 2
